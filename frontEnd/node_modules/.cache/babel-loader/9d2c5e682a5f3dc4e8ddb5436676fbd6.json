{"ast":null,"code":"var _jsxFileName = \"/home/rivo/studies/internationalPhoneNumberValidator/frontEnd/phone-number-categorize/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport List from \"./components/List\";\nimport { ItemService } from \"./services/item.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [hasNext, setHasNext] = useState(true);\n  const [actualPage, setActualPage] = useState(0);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [isValid, setIsValid] = useState(false);\n\n  const getNextPage = () => {\n    if (hasNext) {\n      new ItemService().getPage({\n        page: actualPage + 1\n      }).then(res => {\n        setItems(oldItems => {\n          oldItems.push(...res.content);\n          return oldItems;\n        });\n        setHasNext(!res.last);\n        setActualPage(res.number);\n      });\n    }\n  };\n\n  const getByCountryAndState = () => {\n    new ItemService().getByCountryAndState({\n      country: searchValue,\n      state: isValid,\n      page: 0\n    }).then(res => {\n      setItems(res.content);\n      setHasNext(!res.last);\n      setActualPage(res.number);\n    });\n  };\n\n  useEffect(() => {\n    new ItemService().getPage({\n      page: actualPage\n    }).then(res => {\n      setItems(res.content);\n      setHasNext(!res.last);\n      setActualPage(res.number);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"International Phone Number Categorize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Country here\",\n      value: searchValue,\n      onChange: e => setSearchValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getByCountryAndState,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"state\",\n      value: isValid ? 1 : 0,\n      onChange: e => setIsValid(!!e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 1,\n        children: \"Valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 0,\n        children: \"Invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" COUNTRY NAME \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" COUNTRY CODE \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" PHONE NUMBER \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" STATE \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getNextPage,\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"DDq5FMY4U9txMij71UKfWtPpbuY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/rivo/studies/internationalPhoneNumberValidator/frontEnd/phone-number-categorize/src/App.tsx"],"names":["React","useEffect","useState","List","ItemService","App","items","setItems","hasNext","setHasNext","actualPage","setActualPage","searchValue","setSearchValue","isValid","setIsValid","getNextPage","getPage","page","then","res","oldItems","push","content","last","number","getByCountryAndState","country","state","e","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport List from \"./components/List\";\nimport {Phone} from \"./model/phone\";\nimport {ItemService} from \"./services/item.service\";\n\nfunction App() {\n    const [items, setItems] = useState<Phone[]>([]);\n    const [hasNext, setHasNext] = useState(true);\n    const [actualPage, setActualPage] = useState(0);\n    const [searchValue, setSearchValue] = useState(\"\");\n    const [isValid, setIsValid] = useState(false);\n\n    const getNextPage = () => {\n        if (hasNext) {\n            new ItemService().getPage({page: actualPage + 1}).then(res => {\n                setItems((oldItems) => {\n                    oldItems.push(...res.content);\n                    return oldItems;\n                });\n                setHasNext(!res.last);\n                setActualPage(res.number);\n            })\n        }\n    }\n    const getByCountryAndState = () => {\n        new ItemService().getByCountryAndState({country: searchValue, state: isValid, page: 0}).then(res => {\n            setItems(res.content);\n            setHasNext(!res.last);\n            setActualPage(res.number);\n        })\n\n    }\n    useEffect(() => {\n        new ItemService().getPage({page: actualPage}).then(res => {\n            setItems(res.content);\n            setHasNext(!res.last);\n            setActualPage(res.number);\n        });\n    }, [])\n\n    return (\n        <div>\n            <h1>International Phone Number Categorize</h1>\n            <input type=\"text\" placeholder={\"Country here\"} value={searchValue}\n                   onChange={(e) => setSearchValue(e.target.value)}/>\n            <button onClick={getByCountryAndState}>\n                Search\n            </button>\n            <select name=\"state\" value={isValid ? 1 : 0} onChange={(e) => setIsValid(!!e.target.value)}>\n                <option value={1}>\n                    Valid\n                </option>\n                <option value={0}>\n                    Invalid\n                </option>\n            </select>\n            <div>\n                <span> COUNTRY NAME </span>\n                <span> COUNTRY CODE </span>\n                <span> PHONE NUMBER </span>\n                <span> STATE </span>\n            </div>\n            <List items={items}/>\n            <button onClick={getNextPage}>\n                Load More\n            </button>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}